class RbsGoose::Configuration
  @llm: RbsGoose::Configuration::LLMConfig
  extend Forwardable
  LLMConfig: Struct.new(client: Langchain::LLM, mode: Symbol, keyword_init: true)
  TemplateConfig: Struct.new(instruction: String, example_groups: Array[RbsGoose::IO::ExampleGroup], template_class: Class, keyword_init: true) do
    def build_template: () -> (RbsGoose::Templates::InferTemplate | RbsGoose::Templates::FixErrorTemplate)
  end

  def initialize: () ?{ () -> void } -> void
  attr_accessor llm: RbsGoose::Configuration::LLMConfig
  attr_accessor infer_template: RbsGoose::Configuration::TemplateConfig
  attr_accessor fix_error_template: RbsGoose::Configuration::TemplateConfig
  def use_open_ai: (String open_ai_access_token, ?model_name: String, ?mode: Symbol, ?llm_options: Hash[untyped, untyped], ?default_options: Hash[untyped, untyped]) -> void
  def use_anthropic: (String access_token, ?model_name: String, ?mode: Symbol, ?default_options: Hash[untyped, untyped]) -> void
  def use_ollama: (?url: String, ?model_name: String, ?mode: Symbol, ?default_options: Hash[untyped, untyped]) -> void
  private def default_infer_template: () -> RbsGoose::Configuration::TemplateConfig
  private def default_fix_error_template: () -> RbsGoose::Configuration::TemplateConfig
  private def default_infer_instruction: () -> String
  private def default_infer_example_groups: () -> Array[RbsGoose::IO::ExampleGroup]
  private def default_fix_error_instruction: () -> String
  private def default_fix_error_example_groups: () -> Array[RbsGoose::IO::ExampleGroup]
end