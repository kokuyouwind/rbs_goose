class RbsGoose::Configuration
  @llm: LLMConfig
  extend Forwardable
  LLMConfig: Struct.new(:client, :mode, keyword_init: true)
  TemplateConfig: Struct.new(:instruction, :example_groups, :template_class, keyword_init: true)
  def initialize: () ?{ () -> void } -> void
  attr_accessor llm: LLMConfig
  attr_accessor infer_template: TemplateConfig
  attr_accessor fix_error_template: TemplateConfig
  def use_open_ai: (String open_ai_access_token, ?model_name: String, ?mode: Symbol, ?llm_options: Hash[Symbol, untyped], ?default_options: Hash[Symbol, untyped]) -> void
  def use_anthropic: (String access_token, ?model_name: String, ?mode: Symbol, ?default_options: Hash[Symbol, untyped]) -> void
  def use_ollama: (?url: String, ?model_name: String, ?mode: Symbol, ?default_options: Hash[Symbol, untyped]) -> void
  private def default_infer_template: () -> TemplateConfig
  private def default_fix_error_template: () -> TemplateConfig
  private def default_infer_instruction: () -> String
  private def default_infer_example_groups: () -> Array[RbsGoose::IO::ExampleGroup]
  private def default_fix_error_instruction: () -> String
  private def default_fix_error_example_groups: () -> Array[RbsGoose::IO::ExampleGroup]
end