class RbsGoose::Configuration
  @llm: Langchain::LLM::OpenAI
  @template: RbsGoose::Templates::DefaultTemplate
  def initialize: () ?{ () -> void } -> void
  attr_accessor llm: Langchain::LLM::OpenAI
  attr_accessor instruction: String
  attr_accessor example_groups: Array[RbsGoose::IO::ExampleGroup]
  attr_accessor template_class: class
  def use_open_ai: (String open_ai_access_token, ?default_options: ::Hash[Symbol, untyped]) -> Langchain::LLM::OpenAI
  def template: () -> RbsGoose::Templates::DefaultTemplate
  private def default_template_class: () -> class
  private def default_instruction: () -> String
  private def default_example_groups: () -> Array[RbsGoose::IO::ExampleGroup]
end