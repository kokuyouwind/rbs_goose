class RbsGoose::IO::File
  @path: String
  @base_path: untyped
  @content: String
  @type: Symbol
  MARKDOWN_REGEXP: ::Regexp
  def self.from_markdown: (String) -> RbsGoose::IO::File
  def initialize: (path: String, ?content: String, ?base_path: untyped) -> void
  def load_content: () -> String
  def absolute_path: () -> String
  def type: () -> Symbol
  def to_s: () -> String
  def content=: (String) -> String
  def write: () -> untyped
  def ==: (untyped) -> untyped
  attr_reader path: String
  attr_reader content: String
  attr_reader base_path: untyped
end